{"version":3,"sources":["spotify.js","components/Login.js","components/SidebarOption.js","StateProvider.js","components/Sidebar.js","components/Header.js","components/SongRow.js","components/Body.js","components/Footer.js","components/Player.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["loginUrl","concat","join","getTokenFromUrl","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","Login","React","createElement","className","src","alt","href","SidebarOption","_ref","title","Icon","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","_playlists$items","playlists","HomeOutlinedIcon","SearchIcon","LibraryMusicOutlinedIcon","items","map","playlist","key","id","name","Header","_user$images$","user","placeholder","type","Avatar","images","url","display_name","SongRow","track","playSong","onClick","album","explicit","ExplicitIcon","fontSize","artists","artist","millis","minutes","Math","floor","seconds","toFixed","millisToMinutesAndSeconds","duration_ms","Body","spotify","global_top","dispatch","play","uris","then","res","getMyCurrentPlayingTrack","r","playing","catch","err","status","alert","description","PlayCircleFilledIcon","playPlaylist","context_uri","FavoriteIcon","MoreHorizIcon","tracks","Footer","useEffect","getMyCurrentPlaybackState","is_playing","handlePlayPause","pause","ShuffleIcon","SkipPreviousIcon","skipToPrevious","PauseCircleOutlineIcon","PlayCircleOutlineIcon","SkipNextIcon","skipToNext","RepeatIcon","Grid","container","spacing","PlaylistPlayIcon","VolumeDownIcon","xs","Slider","aria-labelledby","Player","SpotifyWebApi","App","token","_token","access_token","setAccessToken","getMe","getUserPlaylists","getPlaylist","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.8b07a55d.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\n// const redirectUri = \"https://rakshithp7.github.io/react-spotify-clone/\";\nconst redirectUri = \"http://localhost:3000/\";\n\n// const clientId = \"29cba9ed25824cab8c7ea1083f7a0964\";\nconst clientId = \"21695f3b836b4ece915c4363a39ec0ef\";\n\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n];\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n\nexport const getTokenFromUrl = () => {\n  return window.location.hash\n    .substring(1)\n    .split(\"&\")\n    .reduce((initial, item) => {\n      let parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n\n      return initial;\n    }, {});\n};\n","import React from \"react\";\nimport \"./Login.css\";\nimport { loginUrl } from \"../spotify\";\n\nconst Login = () => {\n  return (\n    <div className=\"login\">\n      <h1>Login</h1>\n      <img\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\n        alt=\"\"\n      />\n      <a href={loginUrl}>LOGIN WITH SPOTIFY</a>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport \"./SidebarOption.css\";\n\nconst SidebarOption = ({ title, Icon }) => {\n  return (\n    <div className=\"sidebarOption\">\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\n      {Icon ? <h4>{title}</h4> : <p>{title}</p>}\n    </div>\n  );\n};\n\nexport default SidebarOption;\n","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","import React from \"react\";\nimport \"./Sidebar.css\";\nimport SidebarOption from \"./SidebarOption\";\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LibraryMusicOutlinedIcon from \"@material-ui/icons/LibraryMusicOutlined\";\nimport { useStateValue } from \"../StateProvider\";\n\nconst Sidebar = () => {\n  const [{ playlists }] = useStateValue();\n\n  return (\n    <div className=\"sidebar\">\n      <img\n        className=\"sidebar__logo\"\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\n        alt=\"\"\n      />\n      <SidebarOption title=\"Home\" Icon={HomeOutlinedIcon} />\n      <SidebarOption title=\"Search\" Icon={SearchIcon} />\n      <SidebarOption title=\"Your Library\" Icon={LibraryMusicOutlinedIcon} />\n\n      <br />\n      <strong className=\"sidebar__title\">PLAYLISTS</strong>\n      <hr />\n\n      {playlists?.items?.map((playlist) => (\n        <SidebarOption key={playlist.id} title={playlist.name} />\n      ))}\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport \"./Header.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Avatar } from \"@material-ui/core\";\nimport { useStateValue } from \"../StateProvider\";\n\nconst Header = () => {\n  const [{ user }] = useStateValue();\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <SearchIcon />\n        <input\n          placeholder=\"Search for Artists, Songs, or Podcasts\"\n          type=\"text\"\n        />\n      </div>\n      <div className=\"header__right\">\n        <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\n        <h4>{user?.display_name}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./SongRow.css\";\nimport ExplicitIcon from \"@material-ui/icons/Explicit\";\n\nconst SongRow = ({ track, playSong }) => {\n  const millisToMinutesAndSeconds = (millis) => {\n    var minutes = Math.floor(millis / 60000);\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\n    return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n  };\n\n  return (\n    <div className=\"songRow\" onClick={() => playSong(track.id)}>\n      <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\n      <div className=\"songRow__info\">\n        <h1>{track.name}</h1>\n        <div className=\"songRow__songDetails\">\n          <p>\n            {track.explicit && <ExplicitIcon fontSize=\"small\" />}\n            {track.artists.map((artist) => artist.name).join(\", \")} •{\" \"}\n            {track.album.name}\n          </p>\n          <p>{millisToMinutesAndSeconds(track.duration_ms)}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SongRow;\n","import React from \"react\";\nimport \"./Body.css\";\nimport Header from \"./Header\";\nimport SongRow from \"./SongRow\";\nimport { useStateValue } from \"../StateProvider\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\n\nconst Body = ({ spotify }) => {\n  const [{ global_top }, dispatch] = useStateValue();\n\n  const playPlaylist = () => {\n    spotify\n      .play({\n        context_uri: `spotify:playlist:37i9dQZEVXcJZyENOWUFo7`,\n      })\n      .then((res) => {\n        spotify.getMyCurrentPlayingTrack().then((r) => {\n          dispatch({\n            type: \"SET_ITEM\",\n            item: r.item,\n          });\n          dispatch({\n            type: \"SET_PLAYING\",\n            playing: true,\n          });\n        });\n      })\n      .catch((err) => {\n        if (err.status === 403) {\n          alert(\"You do not have PREMIUM.\");\n        }\n      });\n  };\n\n  const playSong = (id) => {\n    spotify\n      .play({\n        uris: [`spotify:track:${id}`],\n      })\n      .then((res) => {\n        spotify.getMyCurrentPlayingTrack().then((r) => {\n          dispatch({\n            type: \"SET_ITEM\",\n            item: r.item,\n          });\n          dispatch({\n            type: \"SET_PLAYING\",\n            playing: true,\n          });\n        });\n      })\n      .catch((err) => {\n        if (err.status === 403) {\n          alert(\"You do not have PREMIUM.\");\n        }\n      });\n  };\n\n  return (\n    <div className=\"body\">\n      <Header />\n\n      <div className=\"body__info\">\n        <img src={global_top?.images[0].url} alt=\"\" />\n        <div className=\"body__infoText\">\n          <strong>PLAYLIST</strong>\n          <h2>Global Top 50</h2>\n          <p>{global_top?.description}</p>\n        </div>\n      </div>\n      <div className=\"body__songs\">\n        <div className=\"body__icons\">\n          <PlayCircleFilledIcon\n            className=\"body__shuffle\"\n            onClick={playPlaylist}\n          />\n          <FavoriteIcon fontSize=\"large\" />\n          <MoreHorizIcon />\n        </div>\n\n        {/* List of songs */}\n        {global_top?.tracks.items.map((item) => (\n          <SongRow key={item.track.id} playSong={playSong} track={item.track} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Body;\n","import React, { useEffect } from \"react\";\nimport \"./Footer.css\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport { Grid, Slider } from \"@material-ui/core\";\nimport { useStateValue } from \"../StateProvider\";\n\nconst Footer = ({ spotify }) => {\n  const [{ item, playing }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    spotify.getMyCurrentPlaybackState().then((r) => {\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: r.is_playing,\n      });\n\n      dispatch({\n        type: \"SET_ITEM\",\n        item: r.item,\n      });\n    });\n  }, [spotify]); //eslint-disable-line\n\n  const handlePlayPause = () => {\n    if (playing) {\n      spotify.pause();\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: false,\n      });\n    } else {\n      spotify.play();\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: true,\n      });\n    }\n  };\n\n  const skipToPrevious = () => {\n    spotify.skipToPrevious();\n    spotify.getMyCurrentPlayingTrack().then((r) => {\n      dispatch({\n        type: \"SET_ITEM\",\n        item: r.item,\n      });\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: true,\n      });\n    });\n  };\n\n  const skipToNext = () => {\n    spotify.skipToNext();\n    spotify.getMyCurrentPlayingTrack().then((r) => {\n      dispatch({\n        type: \"SET_ITEM\",\n        item: r.item,\n      });\n      dispatch({\n        type: \"SET_PLAYING\",\n        playing: true,\n      });\n    });\n  };\n\n  return (\n    <div className=\"footer\">\n      <div className=\"footer__left\">\n        <img\n          className=\"footer__albumLogo\"\n          src={item?.album.images[0].url}\n          alt=\"\"\n        />\n        {item ? (\n          <div className=\"footer__songInfo\">\n            <h4>{item.name}</h4>\n            <p>{item.artists.map((artist) => artist.name).join(\", \")}</p>\n          </div>\n        ) : (\n          <div className=\"footer__songInfo\">\n            <h4>No song is playing</h4>\n            <p>...</p>\n          </div>\n        )}\n      </div>\n      <div className=\"footer__center\">\n        <ShuffleIcon className=\"footer__green\" />\n        <SkipPreviousIcon className=\"footer__icon\" onClick={skipToPrevious} />\n        {playing ? (\n          <PauseCircleOutlineIcon\n            onClick={handlePlayPause}\n            fontSize=\"large\"\n            className=\"footer__icon\"\n          />\n        ) : (\n          <PlayCircleOutlineIcon\n            onClick={handlePlayPause}\n            fontSize=\"large\"\n            className=\"footer__icon\"\n          />\n        )}\n        <SkipNextIcon className=\"footer__icon\" onClick={skipToNext} />\n        <RepeatIcon className=\"footer__green\" />\n      </div>\n      <div className=\"footer__right\">\n        <Grid container spacing={2}>\n          <Grid item>\n            <PlaylistPlayIcon />\n          </Grid>\n          <Grid item>\n            <VolumeDownIcon />\n          </Grid>\n          <Grid item xs>\n            <Slider aria-labelledby=\"continuous-slider\" />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport \"./Player.css\";\nimport Sidebar from \"./Sidebar\";\nimport Body from \"./Body\";\nimport Footer from \"./Footer\";\n\nconst Player = ({ spotify }) => {\n  return (\n    <div className=\"player\">\n      <div className=\"player__body\">\n        <Sidebar />\n        <Body spotify={spotify} />\n      </div>\n      <Footer spotify={spotify} />\n    </div>\n  );\n};\n\nexport default Player;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Login from \"./components/Login\";\nimport Player from \"./components/Player\";\nimport { useStateValue } from \"./StateProvider\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n\n    const _token = hash.access_token;\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n\n      spotify.getPlaylist(\"37i9dQZEVXbMDoHDwVN2tF\").then((res) => {\n        dispatch({\n          type: \"SET_GLOBAL_TOP\",\n          global_top: res,\n        });\n      });\n    }\n  }, []); // eslint-disable-line\n\n  return (\n    <div className=\"app\">\n      {token ? <Player spotify={spotify} /> : <Login />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\n  user: null,\n  playlists: [],\n  playing: false,\n  item: null,\n  token: null,\n  global_top: null,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n      };\n    case \"SET_TOKEN\":\n      return {\n        ...state,\n        token: action.token,\n      };\n    case \"SET_PLAYLISTS\":\n      return {\n        ...state,\n        playlists: action.playlists,\n      };\n    case \"SET_GLOBAL_TOP\":\n      return {\n        ...state,\n        global_top: action.global_top,\n      };\n    case \"SET_ITEM\":\n      return {\n        ...state,\n        item: action.item,\n      };\n    case \"SET_PLAYING\":\n      return {\n        ...state,\n        playing: action.playing,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StateProvider } from \"./StateProvider\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}