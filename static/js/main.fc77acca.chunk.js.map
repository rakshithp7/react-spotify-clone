{"version":3,"sources":["spotify.js","components/Login.js","components/SidebarOption.js","StateProvider.js","components/Sidebar.js","components/Header.js","components/SongRow.js","components/Body.js","components/Footer.js","components/Player.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","SidebarOption","title","Icon","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","playlists","HomeOutlinedIcon","SearchIcon","LibraryMusicOutlinedIcon","items","map","playlist","name","Header","user","placeholder","type","Avatar","images","url","display_name","SongRow","track","playSong","onClick","id","album","explicit","fontSize","artists","artist","millis","minutes","Math","floor","seconds","toFixed","millisToMinutesAndSeconds","duration_ms","Body","spotify","discover_weekly","dispatch","play","uris","then","res","getMyCurrentPlayingTrack","r","item","playing","catch","err","status","alert","description","context_uri","tracks","Footer","useEffect","getMyCurrentPlaybackState","is_playing","handlePlayPause","pause","urls","skipToPrevious","skipToNext","Grid","container","spacing","xs","Slider","aria-labelledby","Player","SpotifyWebApi","App","token","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","getUserPlaylists","getPlaylist","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.fc77acca.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\nconst redirectUri = \"http://localhost:3000/\";\r\n\r\nconst clientId = \"29cba9ed25824cab8c7ea1083f7a0964\";\r\n\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n];\r\n\r\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n\r\nexport const getTokenFromUrl = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce((initial, item) => {\r\n      let parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n      return initial;\r\n    }, {});\r\n};\r\n","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { loginUrl } from \"../spotify\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div className=\"login\">\r\n      <h1>Login</h1>\r\n      <img\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\"\r\n      />\r\n      <a href={loginUrl}>LOGIN WITH SPOTIFY</a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./SidebarOption.css\";\r\n\r\nconst SidebarOption = ({ title, Icon }) => {\r\n  return (\r\n    <div className=\"sidebarOption\">\r\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n      {Icon ? <h4>{title}</h4> : <p>{title}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarOption;\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LibraryMusicOutlinedIcon from \"@material-ui/icons/LibraryMusicOutlined\";\r\nimport { useStateValue } from \"../StateProvider\";\r\n\r\nconst Sidebar = () => {\r\n  const [{ playlists }] = useStateValue();\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <img\r\n        className=\"sidebar__logo\"\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\"\r\n      />\r\n      <SidebarOption title=\"Home\" Icon={HomeOutlinedIcon} />\r\n      <SidebarOption title=\"Search\" Icon={SearchIcon} />\r\n      <SidebarOption title=\"Your Library\" Icon={LibraryMusicOutlinedIcon} />\r\n\r\n      <br />\r\n      <strong className=\"sidebar__title\">PLAYLISTS</strong>\r\n      <hr />\r\n\r\n      {playlists?.items?.map((playlist) => (\r\n        <SidebarOption title={playlist.name} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { useStateValue } from \"../StateProvider\";\r\n\r\nconst Header = () => {\r\n  const [{ user }] = useStateValue();\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        <SearchIcon />\r\n        <input\r\n          placeholder=\"Search for Artists, Songs, or Podcasts\"\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n      <div className=\"header__right\">\r\n        <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\r\n        <h4>{user?.display_name}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./SongRow.css\";\r\nimport ExplicitIcon from \"@material-ui/icons/Explicit\";\r\n\r\nconst SongRow = ({ track, playSong }) => {\r\n  const millisToMinutesAndSeconds = (millis) => {\r\n    var minutes = Math.floor(millis / 60000);\r\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n  };\r\n\r\n  return (\r\n    <div className=\"songRow\" onClick={() => playSong(track.id)}>\r\n      <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\r\n      <div className=\"songRow__info\">\r\n        <h1>{track.name}</h1>\r\n        <div className=\"songRow__songDetails\">\r\n          <p>\r\n            {track.explicit && <ExplicitIcon fontSize=\"small\" />}\r\n            {track.artists.map((artist) => artist.name).join(\", \")} •{\" \"}\r\n            {track.album.name}\r\n          </p>\r\n          <p>{millisToMinutesAndSeconds(track.duration_ms)}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SongRow;\r\n","import React from \"react\";\r\nimport \"./Body.css\";\r\nimport Header from \"./Header\";\r\nimport SongRow from \"./SongRow\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nconst Body = ({ spotify }) => {\r\n  const [{ discover_weekly }, dispatch] = useStateValue();\r\n\r\n  const playPlaylist = () => {\r\n    spotify\r\n      .play({\r\n        context_uri: `spotify:playlist:37i9dQZEVXcJZyENOWUFo7`,\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n          });\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        if (err.status === 403) {\r\n          alert(\"You do not have PREMIUM.\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const playSong = (id) => {\r\n    spotify\r\n      .play({\r\n        uris: [`spotify:track:${id}`],\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n          });\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        if (err.status === 403) {\r\n          alert(\"You do not have PREMIUM.\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <Header />\r\n\r\n      <div className=\"body__info\">\r\n        <img src={discover_weekly?.images[0].url} alt=\"\" />\r\n        <div className=\"body__infoText\">\r\n          <strong>PLAYLIST</strong>\r\n          <h2>Discover Weekly</h2>\r\n          <p>{discover_weekly?.description}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"body__songs\">\r\n        <div className=\"body__icons\">\r\n          <PlayCircleFilledIcon\r\n            className=\"body__shuffle\"\r\n            onClick={playPlaylist}\r\n          />\r\n          <FavoriteIcon fontSize=\"large\" />\r\n          <MoreHorizIcon />\r\n        </div>\r\n\r\n        {/* List of songs */}\r\n        {discover_weekly?.tracks.items.map((item) => (\r\n          <SongRow playSong={playSong} track={item.track} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Footer.css\";\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\nimport { Grid, Slider } from \"@material-ui/core\";\r\nimport { useStateValue } from \"../StateProvider\";\r\n\r\nconst Footer = ({ spotify }) => {\r\n  const [{ item, playing }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    spotify.getMyCurrentPlaybackState().then((r) => {\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: r.is_playing,\r\n      });\r\n\r\n      dispatch({\r\n        type: \"SET_ITEM\",\r\n        item: r.item,\r\n      });\r\n    });\r\n  }, [spotify]); //eslint-disable-line\r\n\r\n  const handlePlayPause = () => {\r\n    if (playing) {\r\n      spotify.pause();\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: false,\r\n      });\r\n    } else {\r\n      spotify.play();\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const skipToPrevious = () => {\r\n    spotify.skipToPrevious();\r\n    spotify.getMyCurrentPlayingTrack().then((r) => {\r\n      dispatch({\r\n        type: \"SET_ITEM\",\r\n        item: r.item,\r\n      });\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  const skipToNext = () => {\r\n    spotify.skipToNext();\r\n    spotify.getMyCurrentPlayingTrack().then((r) => {\r\n      dispatch({\r\n        type: \"SET_ITEM\",\r\n        item: r.item,\r\n      });\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer__left\">\r\n        <img\r\n          className=\"footer__albumLogo\"\r\n          src={item?.album.images[0].urls}\r\n          alt=\"\"\r\n        />\r\n        {item ? (\r\n          <div className=\"footer__songInfo\">\r\n            <h4>{item.name}</h4>\r\n            <p>{item.artists.map((artist) => artist.name).join(\", \")}</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"footer__songInfo\">\r\n            <h4>No song is playing</h4>\r\n            <p>...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"footer__center\">\r\n        <ShuffleIcon className=\"footer__green\" />\r\n        <SkipPreviousIcon className=\"footer__icon\" onClick={skipToPrevious} />\r\n        {playing ? (\r\n          <PauseCircleOutlineIcon\r\n            onClick={handlePlayPause}\r\n            fontSize=\"large\"\r\n            className=\"footer__icon\"\r\n          />\r\n        ) : (\r\n          <PlayCircleOutlineIcon\r\n            onClick={handlePlayPause}\r\n            fontSize=\"large\"\r\n            className=\"footer__icon\"\r\n          />\r\n        )}\r\n        <SkipNextIcon className=\"footer__icon\" onClick={skipToNext} />\r\n        <RepeatIcon className=\"footer__green\" />\r\n      </div>\r\n      <div className=\"footer__right\">\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <PlaylistPlayIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <VolumeDownIcon />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider aria-labelledby=\"continuous-slider\" />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./Player.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Body from \"./Body\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst Player = ({ spotify }) => {\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"player__body\">\r\n        <Sidebar />\r\n        <Body spotify={spotify} />\r\n      </div>\r\n      <Footer spotify={spotify} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Login from \"./components/Login\";\nimport Player from \"./components/Player\";\nimport { useStateValue } from \"./StateProvider\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n\n    const _token = hash.access_token;\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.setAccessToken(_token);\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n\n      spotify.getPlaylist(\"37i9dQZEVXcJWSQE72aVEI\").then((res) => {\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: res,\n        });\n      });\n    }\n  }, []); // eslint-disable-line\n\n  return (\n    <div className=\"app\">\n      {token ? <Player spotify={spotify} /> : <Login />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n  user: null,\r\n  playlists: [],\r\n  playing: false,\r\n  item: null,\r\n  token: null,\r\n  discover_weekly: null,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case \"SET_TOKEN\":\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n      };\r\n    case \"SET_PLAYLISTS\":\r\n      return {\r\n        ...state,\r\n        playlists: action.playlists,\r\n      };\r\n    case \"SET_DISCOVER_WEEKLY\":\r\n      return {\r\n        ...state,\r\n        discover_weekly: action.discover_weekly,\r\n      };\r\n    case \"SET_ITEM\":\r\n      return {\r\n        ...state,\r\n        item: action.item,\r\n      };\r\n    case \"SET_PLAYING\":\r\n      return {\r\n        ...state,\r\n        playing: action.playing,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StateProvider } from \"./StateProvider\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}